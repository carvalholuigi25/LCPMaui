@page "/register"

<PageTitle>LCP Maui - Register</PageTitle>

<h3>Register</h3>

@if(mysession == null)
{
    <EditForm Model="@users" OnValidSubmit="@onValidSubmit" OnInvalidSubmit="@onInvalidSubmit">
        <ValidationSummary />
        <DataAnnotationsValidator />

        <div class="form-group mt-3">
            <label for="username" class="usernamelbl d-block">Username:</label>
            <InputText type="text" class="form-control username mt-3" id="username" @bind-Value="users.Username" />
        </div>

        <div class="form-group mt-3">
            <label for="email" class="emaillbl d-block">Email:</label>
            <InputText type="email" class="form-control email mt-3" id="email" @bind-Value="users.Email" />
        </div>

        <div class="form-group mt-3">
            <label for="password" class="passwordlbl d-block">Password:</label>
            <InputText type="password" class="form-control password mt-3" id="password" @bind-Value="users.Password" />
        </div>

        <div class="form-group mt-3">
            <label for="pin" class="pinlbl d-block">Pin:</label>
            <InputNumber type="password" class="form-control pin mt-3" id="pin" @bind-Value="users.Pin" />
        </div>

        <div class="form-group mt-3">
            <label for="about" class="aboutlbl d-block">About:</label>
            <InputTextArea class="form-control about mt-3" id="about" cols="1" rows="5" @bind-Value="users.About" />
        </div>

        <div class="form-group mt-3">
            <label for="image" class="imagelbl d-block">Image:</label>
            <InputText type="text" class="form-control image mt-3" id="image" @bind-Value="users.Image" />
        </div>

        <div class="form-group mt-3">
            <label for="cover" class="coverlbl d-block">Cover:</label>
            <InputText type="text" class="form-control cover mt-3" id="cover" @bind-Value="users.Cover" />
        </div>

        <div class="form-group mt-3">
            <label for="role" class="rolelbl d-block">Role:</label>
            <InputText type="text" class="form-control role mt-3" id="role" @bind-Value="users.Role" />
        </div>

        <div class="form-group mt-3 mb-3 d-inline-block">
            <input type="reset" class="btn btn-secondary btnclear" value="Clear" />
            <input type="submit" class="btn btn-primary btnsubmit" value="Create" />
        </div>
    </EditForm>
} 
else
{
    <div class="container">
        <div class="row justify-content-center text-center">
            <div class="col-12 text-center">
                <i class="bi bi-exclamation-triangle-fill" style="font-size: 4rem; color: red;"></i>
                <h1 class="mt-3">You are already registered!</h1>
                <a href="/" class="btn btn-primary mt-3">Back</a>
            </div>
        </div>
    </div>
}

@code {
    [Inject] public IMyServices MyServices { get; set; }

    private Classes.Users users = new Classes.Users(); 
    private Classes.UsersAuth mysession = new Classes.UsersAuth();

    protected override async Task OnInitializedAsync()
    {
        mysession = await localStorage.GetItemAsync<Classes.UsersAuth>("usersession");
    }

    private async Task onValidSubmit()
    {
        await js.InvokeVoidAsync("alert", "Valid data!");
        await MyServices.Create<Classes.Users>("users/register", users);
        _navman.NavigateTo("/", true);
    }

    private async Task onInvalidSubmit()
    {
        await js.InvokeVoidAsync("alert", "Invalid data!");
    }
}
