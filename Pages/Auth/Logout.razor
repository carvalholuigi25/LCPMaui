@page "/logout"

<PageTitle>LCP Maui - Logout</PageTitle>

<h3>Logout</h3>

<div class="container">
    @if (mysession != null)
    {
        <div class="row">
            <div class="col-12">
                <p class="mt-3">This session is logged as user @mysession.Username. Do you want to logout?</p>

                <div class="d-inline-block mt-3">
                    <button type="button" class="btn btn-primary" onclick="@(() => DoLogout())">Logout</button>
                    <button type="button" class="btn btn-secondary" onclick="@(() => DoCancel())">Cancel</button>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row justify-content-center text-center">
            <div class="col-12 text-center">
                <i class="bi bi-exclamation-triangle-fill" style="font-size: 4rem; color: red;"></i>
                <h1 class="mt-3">401 Unauthorized!</h1>
                <a href="/" class="btn btn-primary mt-3">Back</a>
            </div>
        </div>
    }
</div>

@code {
    private Classes.UsersAuth mysession = new Classes.UsersAuth();

    protected override async Task OnInitializedAsync()
    {
        mysession = await localStorage.GetItemAsync<Classes.UsersAuth>("usersession");
    }

    private async Task DoLogout()
    {
        if(mysession != null)
        {
            mysession = null;
            await localStorage.RemoveItemAsync("usersession");
            await js.InvokeVoidAsync("alert", "Logged out!");
            _navman.NavigateTo("/", true);
        }
    }

    private async Task DoCancel()
    {
        await js.InvokeVoidAsync("alert", "Cancelled!");
        _navman.NavigateTo("/logout", true);
    }
}
